/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package devtools.deviceaction.schemas.proto;

import "google/protobuf/duration.proto";
import "src/java/com/google/wireless/qa/mobileharness/shared/proto/spec/base_spec.proto";

option java_package = "com.google.devtools.deviceaction.framework.proto";
option java_multiple_files = true;

enum DeviceType {
  UNSPECIFIED_DEVICE_TYPE = 0;
  ANDROID_PHONE = 1;
}

// Specifications for an action operand.
message Operand {
  optional string uuid = 1;
  optional DeviceType device_type = 2;
}

message UnspecifiedSpec {}

// Specs for Android phones.
message AndroidPhoneSpec {
  // Device properties 1 ~ 50
  // Brand from ro.product.brand.
  optional string brand = 1;
  // Options for adb commands 51 ~ 100
  // Wait for boot start.
  optional google.protobuf.Duration reboot_await = 51;
  // Wait for boot complete.
  optional google.protobuf.Duration reboot_timeout = 52;
  // Wait for testharness boot start.
  optional google.protobuf.Duration testharness_boot_await = 53;
  // Wait for testharness boot complete.
  optional google.protobuf.Duration testharness_boot_timeout = 54;
  // Timeout to get stage ready. It is a parameter to pass to device package
  // manager.
  optional google.protobuf.Duration staged_ready_timeout = 55;
  // Extra wait time for stage ready. It is a parameter for the host thread.
  optional google.protobuf.Duration extra_wait_for_staging = 56;
  // Extra wait time if the device is connected via remote protocol.
  optional google.protobuf.Duration extra_wait_for_proxy_mode = 57;
  // Other options 101 ~
  // Can only connect to wifi 2.4
  optional bool wifi_24_only = 101;
  optional bool need_disable_package_cache = 102;
  optional bool reload_by_factory_reset = 103;
  // The dir path for apk modules like captive portal login or networkstack.
  // The key should be the package name.
  // The value should be the dir path.
  map<string, string> module_dir_on_device = 120;
}

// Specs for devices.
message DeviceSpec {
  oneof device_spec {
    UnspecifiedSpec unspecified_spec = 1;
    AndroidPhoneSpec android_phone_spec = 2;
  }
}

// Configs for devices.
//
// For example:
//    message SomeBinaryActionSpec {
//      extend Binary {
//        optional SomeBinaryActionSpec some_binary_action_spec =
//        <unique_number>;
//      }
//      ...
//    }
message DeviceConfig {
  optional DeviceSpec device_spec = 1;
  // Spec for actions.
  extensions 1000 to max;
}

// Specs for device actions.
message ActionSpec {
  // Classify actions by the arity.
  oneof action {
    Nullary nullary = 2;
    Unary unary = 3;
    Binary binary = 4;
  }
}

// Specs for nullary actions.
// For example:
//    message SomeNullaryActionSpec {
//      extend Nullary {
//        optional SomeNullaryActionSpec ext = <unique_number>;
//      }
//      ...
//    }
message Nullary {
  extensions 1000 to max;
}

// Specs for unary actions.
// For example:
//    message SomeUnaryActionSpec {
//      extend Unary {
//        optional SomeUnaryActionSpec ext = <unique_number>;
//      }
//      ...
//    }
message Unary {
  optional Operand first = 1;
  extensions 1000 to max;
}

// Specs for binary actions.
// For example:
//    message SomeBinaryActionSpec {
//      extend Binary {
//        optional SomeBinaryActionSpec ext = <unique_number>;
//      }
//      ...
//    }
message Binary {
  optional Operand first = 1;
  optional Operand second = 2;
  extensions 1000 to max;
}

// A wrapper for repeated fields.
message StringArray {
  repeated string value = 1;
}

// Specs for files.
message FileSpec {
  optional string tag = 1;
  oneof file_oneof {
    string local_path = 4 [(mobileharness.shared.spec.file_detail) = {
      help: "The path to a local file. Or if you rely on device infra to resolve files, it could be the remote file supported by device infra."
    }];
    GCSFile gcs_file = 5;
  }
}

message GCSFile {
  optional string project = 1;
  optional string gs_uri = 2;
}

// A wrapper for resource paths.
message ResourcePath {
  optional string path = 1;
  // Need to store the info because it is expensive to get it if the resource is
  // remote or on device.
  optional bool is_directory = 2;
}
