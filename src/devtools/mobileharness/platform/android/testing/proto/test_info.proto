/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

package mobileharness.platform.android.testing;

option java_package = "com.google.devtools.mobileharness.platform.android.testing.proto";
option java_outer_classname = "TestInfoProto";

// This file is branched from:
// http://google3/third_party/android/android_test_support/tools/device_broker/proto/test_info.proto;rcl=179421284
// Types for annotation values.
enum Type {
  BOOL = 1;
  CLASS = 2;
  DOUBLE = 3;
  ENUM = 4;
  INTEGER = 5;
  LONG = 6;
  STRING = 7;
  METHOD = 8;  // ANDROID SYSTEM ANNO ONLY
  FIELD = 9;   // ANDROID SYSTEM ANNO ONLY
  FLOAT = 10;
  CHAR = 11;
  SHORT = 12;
  BYTE = 13;
  NULL = 14;
  ANNOTATION = 15;
}

// Holds test annotation values.
message AnnotationValuePb {
  // Field name of the annotation item.
  optional string field_name = 1;
  // Field value of the annotation item.
  repeated string field_value = 2;
  // Field type of the annotation item.
  optional Type field_type = 3;
  // Is this annotation value an array (of values)?
  optional bool is_array = 4;

  // Special case when field_type == annotation.
  repeated AnnotationPb field_annotation_value = 6;
}

// Holds test java annotations.
message AnnotationPb {
  // Class of annotation.
  optional string class_name = 1;
  // Annotation values.
  repeated AnnotationValuePb annotation_value = 2;
}

// Holds test method releated info.
message InfoPb {
  // test case method name, e.g.: testFoo
  optional string test_method = 1;
  // Test case class name, e.g.: FooTest
  optional string test_class = 2;
  optional string test_package = 3;
  // DEPRECATED
  repeated AnnotationPb annotation = 4;

  // annotations found on the class
  repeated AnnotationPb class_annotation = 5;
  // annotations found on the method.
  repeated AnnotationPb method_annotation = 6;

  optional bool is_ui_test = 7;
}

// Holds a list of test methods with their properties.
message TestSuitePb {
  repeated InfoPb info = 1;
}
