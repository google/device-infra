/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package mobileharness.api.deviceconfig;

import "src/devtools/mobileharness/api/deviceconfig/proto/basic.proto";
import "src/devtools/mobileharness/api/model/proto/lab.proto";

option java_package = "com.google.devtools.mobileharness.api.deviceconfig.proto";
option java_outer_classname = "Lab";

// The configuration of a lab.
message LabConfig {
  // The host name of the lab, used to index the config.
  string host_name = 1;

  // The IPs the lab will try to use TCP to connect by default.
  repeated string over_tcp_ip = 2;

  // The SSH IP address, port, username and password the lab will try to connect
  // by default, in the format of "ip, username, password".
  repeated OverSshDevice over_ssh = 6;

  // The USB device IDs the lab will try to detect by default.
  repeated UsbDevice usb_device = 7 [deprecated = true];

  // The UUID of devices which will be monitored by the lab.
  repeated string monitored_device_uuid = 3;

  // The configuration which will be applied to devices connect to this lab,
  // and they donâ€™t have specific DeviceConfigs defined above.
  BasicDeviceConfig default_device_config = 4;

  // The UUID of testbed configs of this lab.
  repeated string testbed_uuid = 5;

  reserved 8;

  // The host properties of this lab.
  mobileharness.api.model.HostProperties host_properties = 9;

  reserved 10;

  // The UUID of devices which should be MiscDevice.
  repeated string misc_device_uuid = 11;

  // The SSH groups of this lab.
  repeated SshGroup ssh_group = 12;
}

// The configuration of a SSH group to define users/groups that can ssh to this
// host with a specific user. It works only when hosts have configured SSHd to
// ask Config Server to check SSH authentication.
message SshGroup {
  // The login user of the group.
  string login_user = 1;
  // Allowed identities. Could be a user or a mdb group.
  repeated string principals = 2;
}

// The configuration of an over SSH device.
message OverSshDevice {
  // The ip address to SSH to.
  string ip_address = 1;  // Required
  // The user name for the SSH connection.
  string username = 2;  // Required
  // The password for the SSH connection, optional.
  string password = 3;
  // The device type of ssh device, Required
  string ssh_device_type = 4;
}

// The configuration of an USB device.
message UsbDevice {
  // Device ID in the format of "idVendor:idProduct", e.g. "0403:0001".
  string id = 1;  // Required
  // The device display name on MHFE, will be passed to dimension model.
  string display_name = 2;  // Required
}
