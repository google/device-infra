/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto3";

package devtools.mobileharness.fe.v6.service.proto.device;

option java_package = "com.google.devtools.mobileharness.fe.v6.service.proto.device";
option java_multiple_files = true;
option java_outer_classname = "DeviceStatsProto";

// Represents the data for the Device Healthiness Statistics card.
message HealthinessStats {
  // Time series data for daily healthiness breakdown.
  repeated DailyHealthiness daily_stats = 1;
  // Aggregated data over the selected period.
  AggregatedHealthiness aggregated_stats = 2;
}

// Healthiness breakdown for a single day.
message DailyHealthiness {
  // The date in YYYY-MM-DD format.
  string date = 1;
  float idle = 2;
  float busy = 3;
  float lameduck = 4;
  float init = 5;
  float dying = 6;
  float dirty = 7;
  float prepping = 8;
  float missing = 9;
  float failed = 10;
  float others = 11;
}

// Aggregated healthiness statistics over the selected period.
message AggregatedHealthiness {
  // Total percentage of time the device was considered "In Service".
  float in_service_percent = 1;
  // Total percentage of time the device was considered "Out of Service".
  float out_of_service_percent = 2;
  // Breakdown of time spent in each status.
  message StatusBreakdown {
    string status = 1;
    float percent = 2;
  }
  repeated StatusBreakdown status_breakdown = 3;
}

// Represents the data for the Test Result Statistics card.
message TestResultStats {
  // Time series data for daily test results.
  repeated DailyTestResults daily_stats = 1;
  // Aggregated data over the selected period.
  AggregatedTestResults aggregated_stats = 2;
}

// Test results for a single day.
message DailyTestResults {
  // The date in YYYY-MM-DD format.
  string date = 1;
  int32 pass = 2;
  int32 fail = 3;
  int32 error = 4;
  int32 timeout = 5;
  int32 other = 6;
}

// Aggregated test result statistics over the selected period.
message AggregatedTestResults {
  int32 total_tests = 1;
  int32 completion_count = 2;
  int32 non_completion_count = 3;
  message ResultBreakdown {
    string result = 1;
    int32 count = 2;
    float percent = 3;
  }
  repeated ResultBreakdown result_breakdown = 4;
}

// Represents the data for the Recovery Task Statistics card.
message RecoveryTaskStats {
  // Time series data for daily recovery task outcomes.
  repeated DailyRecoveryTasks daily_stats = 1;
  // Aggregated data over the selected period.
  AggregatedRecoveryTasks aggregated_stats = 2;
}

// Recovery task outcomes for a single day.
message DailyRecoveryTasks {
  // The date in YYYY-MM-DD format.
  string date = 1;
  int32 success = 2;
  int32 fail = 3;
}

// Aggregated recovery task statistics over the selected period.
message AggregatedRecoveryTasks {
  int32 total_tasks = 1;
  message OutcomeBreakdown {
    string outcome = 1;
    int32 count = 2;
    float percent = 3;
  }
  repeated OutcomeBreakdown outcome_breakdown = 2;
}
