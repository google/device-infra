/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.devtools.mobileharness.infra.lab.common.dir;

import com.google.devtools.deviceinfra.shared.util.path.PathUtil;
import com.google.wireless.qa.mobileharness.shared.constant.DirCommon;

/**
 * The lab server needs to generate some log files and temporary files. This class provides the
 * directories of those files.
 */
public final class DirUtil {
  /** Prefix of all the directories generated by Mobile Harness lab server. */
  public static final String DIR_PREFIX = DirCommon.DEFAULT_FOLDER_PREFIX + "lab";

  /** Returns the temp directory of the lab server */
  public static String getTempDir() {
    return PathUtil.join(DirCommon.getTempDirRoot(), DIR_PREFIX + "_tmp");
  }

  /** Returns default dir for saving log files. */
  public static String getDefaultLogDir() {
    return PathUtil.join(DirCommon.getPublicDirRoot(), DIR_PREFIX + "_log");
  }

  /**
   * Returns directory for placing all the files received by file stubby file transfer service. Each
   * file will only keep one copy in this dir, which could be shared by different jobs.
   */
  public static String getReceivedDir() {
    return PathUtil.join(getTempDir(), DIR_PREFIX + "_receive_files");
  }

  /**
   * Returns directory for placing all the files received by cloud file transfer service. Each file
   * will only keep one copy in this dir, which could be shared by different jobs.
   *
   * <p>The files in this directory doesn't need to cleaned by any cleaner in the runtime, because
   * Cloud File Transfer Service will cleanup the cached periodically.
   */
  public static String getCloudReceivedDir() {
    return PathUtil.join(getTempDir(), DIR_PREFIX + "_cloud_received_files");
  }

  /**
   * Returns directory which contains the run file directories for the running jobs. Each job will
   * create one sub-directory under this dir. After the job is done, the sub-directory of the job
   * will be deleted.
   */
  public static String getRunDir() {
    return PathUtil.join(getTempDir(), DIR_PREFIX + "_run_files");
  }

  /**
   * Returns directory for placing the generated files of the tests. Files under this directory is
   * invisible to client. After the tests are finished, the files will be deleted from this
   * directory.
   */
  public static String getPrivateGenDir() {
    return PathUtil.join(getTempDir(), DIR_PREFIX + "_gen_files");
  }

  /**
   * Returns directory for placing the generated files of the tests. After the tests are finished,
   * the files will be sent to client and deleted from this directory.
   */
  public static String getPublicGenDir() {
    return PathUtil.join(DirCommon.getPublicDirRoot(), DIR_PREFIX + "_gen_files");
  }

  /** Returns directory for storing recovery image backups. */
  public static String getRecoveryImageBackupDir() {
    return PathUtil.join(DirCommon.getTempDirRoot(), "mh_android_recovery_img");
  }

  private DirUtil() {}
}
